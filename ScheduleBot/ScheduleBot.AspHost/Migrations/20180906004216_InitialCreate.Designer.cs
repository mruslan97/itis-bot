// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScheduleBot.AspHost.DAL;

namespace ScheduleBot.AspHost.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20180906004216_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ScheduleBot.AspHost.DAL.Entities.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ChatId");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created");

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited");

                    b.Property<string>("Name");

                    b.Property<long>("Version")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ScheduleBot.AspHost.DAL.Entities.ProfileAndGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created");

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited");

                    b.Property<long>("GroupId");

                    b.Property<long>("ProfileId");

                    b.Property<long>("Version")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileAndGroups");
                });

            modelBuilder.Entity("ScheduleServices.Core.Models.ScheduleGroups.ScheduleGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created");

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited");

                    b.Property<int>("GType");

                    b.Property<string>("Name");

                    b.Property<long>("Version")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ScheduleBot.AspHost.DAL.Entities.ProfileAndGroup", b =>
                {
                    b.HasOne("ScheduleServices.Core.Models.ScheduleGroups.ScheduleGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScheduleBot.AspHost.DAL.Entities.Profile", "Profile")
                        .WithMany("ProfileAndGroups")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
